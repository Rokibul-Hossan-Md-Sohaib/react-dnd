{"ast":null,"code":"import _objectSpread from \"E:\\\\New folder (3)\\\\react-dnd-example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"E:\\\\New folder (3)\\\\react-dnd-example\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"E:\\\\New folder (3)\\\\react-dnd-example\\\\src\\\\Column.jsx\";\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { COLUMN } from \"./constants\";\nimport DropZone from \"./DropZone\";\nimport Component from \"./Component\";\nvar style = {};\nvar Column = function Column(_ref) {\n  var data = _ref.data,\n    components = _ref.components,\n    handleDrop = _ref.handleDrop,\n    path = _ref.path;\n  var ref = useRef(null);\n  var _useDrag = useDrag({\n      item: {\n        type: COLUMN,\n        id: data.id,\n        children: data.children,\n        path: path\n      },\n      collect: function collect(monitor) {\n        return {\n          isDragging: monitor.isDragging()\n        };\n      }\n    }),\n    _useDrag2 = _slicedToArray(_useDrag, 2),\n    isDragging = _useDrag2[0].isDragging,\n    drag = _useDrag2[1];\n  var opacity = isDragging ? 0 : 1;\n  drag(ref);\n  var renderComponent = function renderComponent(component, currentPath) {\n    return /*#__PURE__*/React.createElement(Component, {\n      key: component.id,\n      data: component,\n      components: components,\n      path: currentPath,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: _objectSpread({}, style, {\n      opacity: opacity\n    }),\n    className: \"base draggable column\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, data.id, data.children.map(function (component, index) {\n    var currentPath = \"\".concat(path, \"-\").concat(index);\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: component.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DropZone, {\n      data: {\n        path: currentPath,\n        childrenCount: data.children.length\n      },\n      onDrop: handleDrop,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), renderComponent(component, currentPath));\n  }), /*#__PURE__*/React.createElement(DropZone, {\n    data: {\n      path: \"\".concat(path, \"-\").concat(data.children.length),\n      childrenCount: data.children.length\n    },\n    onDrop: handleDrop,\n    isLast: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Column;","map":{"version":3,"names":["React","useRef","useDrag","COLUMN","DropZone","Component","style","Column","_ref","data","components","handleDrop","path","ref","_useDrag","item","type","id","children","collect","monitor","isDragging","_useDrag2","_slicedToArray","drag","opacity","renderComponent","component","currentPath","createElement","key","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","_objectSpread","className","map","index","concat","Fragment","childrenCount","length","onDrop","isLast"],"sources":["E:/New folder (3)/react-dnd-example/src/Column.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { COLUMN } from \"./constants\";\r\nimport DropZone from \"./DropZone\";\r\nimport Component from \"./Component\";\r\n\r\nconst style = {};\r\nconst Column = ({ data, components, handleDrop, path }) => {\r\n  const ref = useRef(null);\r\n\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: {\r\n      type: COLUMN,\r\n      id: data.id,\r\n      children: data.children,\r\n      path\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(ref);\r\n\r\n  const renderComponent = (component, currentPath) => {\r\n    return (\r\n      <Component\r\n        key={component.id}\r\n        data={component}\r\n        components={components}\r\n        path={currentPath}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      style={{ ...style, opacity }}\r\n      className=\"base draggable column\"\r\n    >\r\n      {data.id}\r\n      {data.children.map((component, index) => {\r\n        const currentPath = `${path}-${index}`;\r\n\r\n        return (\r\n          <React.Fragment key={component.id}>\r\n            <DropZone\r\n              data={{\r\n                path: currentPath,\r\n                childrenCount: data.children.length\r\n              }}\r\n              onDrop={handleDrop}\r\n            />\r\n            {renderComponent(component, currentPath)}\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n      <DropZone\r\n        data={{\r\n          path: `${path}-${data.children.length}`,\r\n          childrenCount: data.children.length\r\n        }}\r\n        onDrop={handleDrop}\r\n        isLast\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Column;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,MAAM,QAAQ,aAAa;AACpC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AAEnC,IAAMC,KAAK,GAAG,CAAC,CAAC;AAChB,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAA+C;EAAA,IAAzCC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;IAAEC,UAAU,GAAAH,IAAA,CAAVG,UAAU;IAAEC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;EAClD,IAAMC,GAAG,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAAC,IAAAa,QAAA,GAEMZ,OAAO,CAAC;MACrCa,IAAI,EAAE;QACJC,IAAI,EAAEb,MAAM;QACZc,EAAE,EAAER,IAAI,CAACQ,EAAE;QACXC,QAAQ,EAAET,IAAI,CAACS,QAAQ;QACvBN,IAAI,EAAJA;MACF,CAAC;MACDO,OAAO,EAAE,SAAAA,QAACC,OAAO;QAAA,OAAM;UACrBC,UAAU,EAAED,OAAO,CAACC,UAAU;QAChC,CAAC;MAAA;IACH,CAAC,CAAC;IAAAC,SAAA,GAAAC,cAAA,CAAAT,QAAA;IAVOO,UAAU,GAAAC,SAAA,IAAVD,UAAU;IAAIG,IAAI,GAAAF,SAAA;EAY3B,IAAMG,OAAO,GAAGJ,UAAU,GAAG,CAAC,GAAG,CAAC;EAClCG,IAAI,CAACX,GAAG,CAAC;EAET,IAAMa,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,SAAS,EAAEC,WAAW,EAAK;IAClD,oBACE5B,KAAA,CAAA6B,aAAA,CAACxB,SAAS;MACRyB,GAAG,EAAEH,SAAS,CAACV,EAAG;MAClBR,IAAI,EAAEkB,SAAU;MAChBjB,UAAU,EAAEA,UAAW;MACvBE,IAAI,EAAEgB,WAAY;MAAAG,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAClB;EAEN,CAAC;EAED,oBACErC,KAAA,CAAA6B,aAAA;IACEhB,GAAG,EAAEA,GAAI;IACTP,KAAK,EAAAgC,aAAA,KAAOhC,KAAK;MAAEmB,OAAO,EAAPA;IAAO,EAAG;IAC7Bc,SAAS,EAAC,uBAAuB;IAAAR,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEhC5B,IAAI,CAACQ,EAAE,EACPR,IAAI,CAACS,QAAQ,CAACsB,GAAG,CAAC,UAACb,SAAS,EAAEc,KAAK,EAAK;IACvC,IAAMb,WAAW,MAAAc,MAAA,CAAM9B,IAAI,OAAA8B,MAAA,CAAID,KAAK,CAAE;IAEtC,oBACEzC,KAAA,CAAA6B,aAAA,CAAC7B,KAAK,CAAC2C,QAAQ;MAACb,GAAG,EAAEH,SAAS,CAACV,EAAG;MAAAc,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAChCrC,KAAA,CAAA6B,aAAA,CAACzB,QAAQ;MACPK,IAAI,EAAE;QACJG,IAAI,EAAEgB,WAAW;QACjBgB,aAAa,EAAEnC,IAAI,CAACS,QAAQ,CAAC2B;MAC/B,CAAE;MACFC,MAAM,EAAEnC,UAAW;MAAAoB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EACnB,EACDX,eAAe,CAACC,SAAS,EAAEC,WAAW,CAAC,CACzB;EAErB,CAAC,CAAC,eACF5B,KAAA,CAAA6B,aAAA,CAACzB,QAAQ;IACPK,IAAI,EAAE;MACJG,IAAI,KAAA8B,MAAA,CAAK9B,IAAI,OAAA8B,MAAA,CAAIjC,IAAI,CAACS,QAAQ,CAAC2B,MAAM,CAAE;MACvCD,aAAa,EAAEnC,IAAI,CAACS,QAAQ,CAAC2B;IAC/B,CAAE;IACFC,MAAM,EAAEnC,UAAW;IACnBoC,MAAM;IAAAhB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACN,CACE;AAEV,CAAC;AACD,eAAe9B,MAAM"},"metadata":{},"sourceType":"module"}